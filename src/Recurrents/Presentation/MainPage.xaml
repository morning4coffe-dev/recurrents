<Page x:Class="Recurrents.Presentation.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:local="using:Recurrents.Presentation"
      xmlns:cme="using:Recurrents.Presentation.CustomMarkupExtensions"
      xmlns:uen="using:Uno.Extensions.Navigation.UI"
      xmlns:utu="using:Uno.Toolkit.UI"
      xmlns:toolkit="using:CommunityToolkit.WinUI"
      xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:not_win="http://uno.ui/not_win"
      xmlns:winex="using:WinUIEx"
      NavigationCacheMode="Required"
      Background="{ThemeResource ApplicationBackground}"
      utu:StatusBar.Background="{StaticResource ApplicationBackground}"
      utu:StatusBar.Foreground="Auto"
      mc:Ignorable="d not_win">


  <Grid uen:Region.Attached="True"
        utu:SafeArea.Insets="VisibleBounds"
        utu:SafeArea.Mode="Margin">

    <VisualStateManager.VisualStateGroups>

      <!--AdaptiveTriggers-->
      <VisualStateGroup>
        <VisualState x:Name="SmallScreen">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="0" />
          </VisualState.StateTriggers>

          <VisualState.Setters>
            <Setter Target="navigation.IsPaneToggleButtonVisible"
                    Value="False" />
            <Setter Target="navigationBar.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>

        <VisualState x:Name="LargeScreen">
          <VisualState.StateTriggers>
            <AdaptiveTrigger MinWindowWidth="640" />
          </VisualState.StateTriggers>
        </VisualState>
      </VisualStateGroup>

      <!--Network-->
      <!--<VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <toolkit:NetworkConnectionStateTrigger ConnectionState="Connected" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="disconnectAlert.Visibility"
                    Value="Collapsed" />
          </VisualState.Setters>
        </VisualState>
        <VisualState>
          <VisualState.StateTriggers>
            <toolkit:NetworkConnectionStateTrigger ConnectionState="Disconnected" />
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="disconnectAlert.Visibility"
                    Value="Visible" />
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>-->

    </VisualStateManager.VisualStateGroups>

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>

    <win:Grid>
      <winex:TitleBar Title="Recurrents">
        <winex:TitleBar.IconSource>
          <ImageIconSource ImageSource="ms-appx:///Assets/Icons/icon.png" />
        </winex:TitleBar.IconSource>
      </winex:TitleBar>
    </win:Grid>

    <NavigationView x:Name="navigation"
                    uen:Region.Attached="True"
                    IsBackButtonVisible="Collapsed"
                    IsPaneToggleButtonVisible="True"
                    IsSettingsVisible="False"
                    IsPaneVisible="True"
                    Grid.Row="1">

      <NavigationView.MenuItems>

        <NavigationViewItem uen:Region.Name="Home"
                            Content="Home"
                            IsSelected="True"
                            Icon="{toolkit:FontIcon Glyph=&#xE80F;, FontFamily={StaticResource SymbolThemeFontFamily}}" />
        <NavigationViewItem uen:Region.Name="Archive"
                            Content="Archive"
                            Icon="{toolkit:FontIcon Glyph=&#xE7B8;, FontFamily={StaticResource SymbolThemeFontFamily}}" />

      </NavigationView.MenuItems>

      <NavigationView.FooterMenuItems>
        <NavigationViewItem uen:Region.Name="Settings"
                            Content="Settings"
                            Icon="{toolkit:FontIcon Glyph=&#xE713;, FontFamily={StaticResource SymbolThemeFontFamily}}" />
      </NavigationView.FooterMenuItems>

      <NavigationView.Resources>
        <ResourceDictionary>
          <ResourceDictionary.ThemeDictionaries>
            <ResourceDictionary x:Key="Default">
              <SolidColorBrush x:Key="NavigationViewContentBackground"
                               Color="Transparent" />
              <SolidColorBrush x:Key="NavigationViewContentGridBorderBrush"
                               Color="Transparent" />
            </ResourceDictionary>
          </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
      </NavigationView.Resources>

      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Main Loading Indicator -->
        <ProgressBar IsIndeterminate="{x:Bind ViewModel.IndicateLoading, Mode=OneWay}"
                     Visibility="{x:Bind ViewModel.IndicateLoading, Mode=OneWay}"
                     VerticalAlignment="Top"
                     Margin="5" />

        <!-- Category Frame View -->
        <ContentControl uen:Region.Attached="True"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch" />

        <!-- Network Status Info -->
        <InfoBar x:Name="disconnectAlert"
                 Title="{cme:Localize Name=OfflineAlertText}"
                 Severity="Error"
                 IsClosable="False"
                 VerticalAlignment="Bottom"
                 HorizontalAlignment="Center"
                 Margin="0,0,0,12"
                 CornerRadius="28"
                 IsOpen="False">
          <InfoBar.IconSource>
            <FontIconSource Glyph="&#xF384;" />
          </InfoBar.IconSource>
        </InfoBar>

        <!-- Mobile Navigation -->
        <utu:TabBar x:Name="navigationBar"
                    uen:Region.Attached="True"
                    Background="{ThemeResource CardBackground}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    Visibility="Collapsed"
                    SelectionIndicatorTransitionMode="Slide"
                    MinHeight="62"
                    MaxHeight="62"
                    CornerRadius="0"
                    Grid.Row="1">
          
          <utu:TabBar.Items>

            <utu:TabBarItem uen:Region.Name="Home"
                            IsSelected="True"
                            Icon="{toolkit:FontIcon Glyph=&#xE80F;, FontFamily={StaticResource SymbolThemeFontFamily}}"
                             /><!--win:Icon="{toolkit:FontIcon Glyph=&#xE80F;}"-->
            <utu:TabBarItem uen:Region.Name="Archive"
                            Icon="{toolkit:FontIcon Glyph=&#xE7B8;, FontFamily={StaticResource SymbolThemeFontFamily}}" />
                            <!--win:Icon="{toolkit:FontIcon Glyph=&#xE7B8;}"-->
            <utu:TabBarItem uen:Region.Name="Settings"
                            Icon="{toolkit:FontIcon Glyph=&#xE713;, FontFamily={StaticResource SymbolThemeFontFamily}}" />
                            <!--win:Icon="{toolkit:FontIcon Glyph=&#xE713;}"-->

          </utu:TabBar.Items>

          <utu:TabBar.SelectionIndicatorContentTemplate>
            <DataTemplate>
              <Border Background="{ThemeResource AccentAAFillColorDefaultBrush}"
                      Height="5"
                      Margin="40, 10"
                      CornerRadius="3.5"
                      VerticalAlignment="Bottom" />
            </DataTemplate>
          </utu:TabBar.SelectionIndicatorContentTemplate>
          <utu:TabBar.Resources>
            <ResourceDictionary>
              <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                  <SolidColorBrush x:Key="TabBarItemBackgroundSelected"
                                   Color="Transparent" />
                  <SolidColorBrush x:Key="TabBarItemBackgroundSelectedPointerOver"
                                   Color="Transparent" />
                  <SolidColorBrush x:Key="TabBarItemForegroundSelectedPressed"
                                   Color="Transparent" />
                </ResourceDictionary>
              </ResourceDictionary.ThemeDictionaries>
            </ResourceDictionary>
          </utu:TabBar.Resources>
        </utu:TabBar>
      </Grid>
    </NavigationView>
  </Grid>

</Page>
